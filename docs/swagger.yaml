basePath: /
definitions:
  gin.H:
    additionalProperties: {}
    type: object
  gorm.DeletedAt:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
  user-service_internal_models.ChangePasswordInput:
    properties:
      new_password:
        minLength: 8
        type: string
      old_password:
        type: string
    required:
    - new_password
    - old_password
    type: object
  user-service_internal_models.LoginInput:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  user-service_internal_models.RegisterInput:
    properties:
      confirm_password:
        type: string
      email:
        type: string
      name:
        type: string
      password:
        minLength: 8
        type: string
    required:
    - confirm_password
    - email
    - name
    - password
    type: object
  user-service_internal_models.User:
    properties:
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      email:
        type: string
      id:
        type: integer
      last_login:
        type: string
      name:
        type: string
      password:
        type: string
      role:
        type: string
      updatedAt:
        type: string
    type: object
  utils.ErrorResponse:
    properties:
      message:
        type: string
      status:
        type: integer
    type: object
  utils.TokenResponse:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: API documentation for User Service
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: User Service API
  version: "1.0"
paths:
  /google-callback:
    get:
      description: Callback for Google OAuth2 login
      responses:
        "200":
          description: data
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Google OAuth2 callback
      tags:
      - User
  /google-login:
    get:
      description: Login a user with Google OAuth2
      responses:
        "302":
          description: Found
      summary: Login with Google
      tags:
      - User
  /login:
    post:
      consumes:
      - application/json
      description: Login a user with email and password
      parameters:
      - description: User Login Data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/user-service_internal_models.LoginInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.TokenResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
      summary: Login a user
      tags:
      - user
  /register:
    post:
      consumes:
      - application/json
      description: Register a new user with name, email, and password
      parameters:
      - description: User Registration Data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/user-service_internal_models.RegisterInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user-service_internal_models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
      summary: Register a new user
      tags:
      - user
  /user/change-password:
    post:
      consumes:
      - application/json
      description: Change password for a user
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: Change Password Data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/user-service_internal_models.ChangePasswordInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Change password
      tags:
      - User
swagger: "2.0"
